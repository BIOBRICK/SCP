% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SCP-app.R
\name{RunSCExplorer}
\alias{RunSCExplorer}
\title{RunSCExplorer}
\usage{
RunSCExplorer(
  base_dir = "SCExplorer",
  DataFile = "Data.hdf5",
  MetaFile = "Meta.hdf5",
  title = "SCExplorer",
  initial_dataset = NULL,
  initial_reduction = NULL,
  initial_group = NULL,
  initial_feature = NULL,
  initial_assay = NULL,
  initial_slot = NULL,
  initial_label = "No",
  initial_cell_palette = "Paired",
  initial_feature_palette = "Spectral",
  initial_theme = "theme_scp",
  initial_size = 4,
  initial_ncol = 3,
  initial_arrange = "Row",
  initial_dpi = 100,
  workers = 2,
  create_script = TRUE,
  style_script = require("styler", quietly = TRUE),
  overwrite = FALSE,
  return_app = TRUE
)
}
\arguments{
\item{workers}{}
}
\description{
RunSCExplorer
}
\examples{
\dontrun{
data("pancreas_sub")
pancreas_sub <- Standard_SCP(pancreas_sub)
data("panc8_sub")
panc8_sub <- Integration_SCP(srtMerge = panc8_sub, batch = "tech", integration_method = "Seurat")

PrepareSCExplorer(list(mouse_pancreas = pancreas_sub, human_pancreas = panc8_sub), base_dir = "./SCExplorer", overwrite = TRUE)

# Create the app.R script
app <- RunSCExplorer(base_dir = "./SCExplorer", overwrite = TRUE)
list.files("./SCExplorer") # This directory can be used as site directory for Shiny Server.

# Run shiny app
if (interactive()) {
  shiny::runApp(app)
}
# Note: If SCP installed in the isolated environment using renv, you need to add `renv::activate(project = "path/to/SCP_env")` to the app.R script.

####################################################################################################################
# You can deploy the app on the self-hosted shiny server(https://www.rstudio.com/products/shiny/shiny-server/).
# Or deploy the app on the website(https://www.shinyapps.io) for free:

### step1: set the repository URL for Bioconductor packages and update them to the latest version
# options(repos = BiocManager::repositories())
# BiocManager::install(ask = FALSE)

### step2: install "rsconnect" package and authorize your account
# install.packages("rsconnect")
# library(rsconnect)
# setAccountInfo(name = "<NAME>", token = "<TOKEN>", secret = "<SECRET>")

### step3: deploy the app
# deployApp("./SCExplorer")
}

}
